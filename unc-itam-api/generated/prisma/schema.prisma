// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Teacher
  Admin
}

enum Category {
  Chromebook
  Tablet
  Router
  Speaker
}

enum DeviceStatus {
  Available
  InUse
  UnderRepair
  Lost
}

enum TransactionStatus {
  Pending
  Returned
}

model User {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  password   String
  role       Role
  employeeId String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  transactions Transaction[]
}

model Device {
  id           String        @id @default(cuid())
  model        String
  serialNumber String?       @unique
  tagNumber    String        @unique
  category     Category
  status       DeviceStatus
  remark       String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
}

model Transaction {
  id           String            @id @default(cuid())
  borrowerName String?
  borrowerId   String?
  borrower     User?             @relation(fields: [borrowerId], references: [id])
  deviceId     String
  device       Device            @relation(fields: [deviceId], references: [id])
  purpose      String
  borrowedDate DateTime
  returnedDate DateTime?
  status       TransactionStatus @default(Pending)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}
